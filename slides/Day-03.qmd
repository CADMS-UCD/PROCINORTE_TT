---
title: "Day-03"
author: "Pablo Gomez"
format: 
  revealjs:
    theme: [dark, custom.scss]
    footer: "[Workshop homepage](https://cadms-ucd.github.io/PROCINORTE_TT/)"
editor: source
title-slide-attributes:
    data-background-image: img/bg_title.png
---
## [Review: day 01]{style="color:black;"} {background-image="img/bg_2.png"}

```{r, echo = F}
knitr::opts_chunk$set(warning = F, message = F, echo = T)
library(dplyr); library(kableExtra);library(DT); library(ggplot2)
library(STNet)
options(DT.options = list(pageLength = 5))

data('captures')

Pable <- function(x, head = 5){
  x %>% head(head) %>% 
  kbl() %>% 
  kable_material_dark(full_width = F, lightable_options = c('hover'))
}
```

```{r echo=T}
x <- seq(from = 5, to = 23, length.out = 10) # create a sequence of numbers
y <- seq(from = 0.1, to = 0.78, length.out = 10) # Create another sequence

mean(x*y) # Get the mean of the multiplication
```

::: columns
::: {.column with="30%"}
Objects:\
- x\
- y
:::

::: {.column with="30%"}
Operators:\
- `*`\
- `<-`
:::
:::

::: columns
::: {.column with="30%"}
Functions:\
- `seq()`\
- `mean()`
:::

::: {.column with="30%"}
Arguments:\
- `from`\
- `to`\
- `lengt.out`
:::
:::

## Review: day 02 {background-image="img/bg.png"}

<br/>

-   `select()` [to select specific *columns*]{.black}
-   `slice()` [to select specific *rows* based on position]{.black}
-   `filter()` [to select specific *rows* based on a condition]{.black}
-   `mutate()` [to create new variables]{.black}

## Review: day 02 {background-image="img/bg.png"}

<br/>

[Other function we reviewed:]{.black}

-   `count()` [Count rows by one or more groups]{.black}
-   `group_by()` [aggregate the data by one or more groups]{.black}
-   `summarise()` [applies functions to the grouped variables]{.black}

## Review: figures {background-image="img/bg.png"}

<br/>

[Components needed to define a graphic:]{.black}

::: incremental
-   [*data*, the data set we will use to generate the figure]{.black}
-   [*geometry*, or type of graphic we will generate (i.e. histogram, bar, scatter, etc..)]{.black}
-   [*aesthetic or mapping*, variables or arguments that will be used for the figure for example: location, color, size, etc..]{.black}
:::

## Review: Maps {background-image="img/bg.png"}

<br/>

[Types of vectors:]{.black}

::: incremental
-   [*Point*, Location]{.black}
-   [*Line*, Location and direction]{.black}
-   [*Polygon*, Location and area]{.black}
:::

## Review: Maps {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "|1"
ggplot() +
  geom_stars(data = Mxst) +
  geom_sf(data = Area, fill = NA, col = 'grey60') +
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') +
  theme_void() +
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) +
  labs(fill = 'Altitude')
```

## [Review: Maps]{style="color:black;"} {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "2"
ggplot() + # create the empty canvas
  geom_stars(data = Mxst) +
  geom_sf(data = Area, fill = NA, col = 'grey60') +
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') +
  theme_void() +
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) +
  labs(fill = 'Altitude')
```

## [Review: Maps]{style="color:black;"} {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "3"
ggplot() + # create the empty canvas
  geom_stars(data = Mxst) + # add raster layer
  geom_sf(data = Area, fill = NA, col = 'grey60') + 
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') +
  theme_void() +
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) +
  labs(fill = 'Altitude')
```

## [Review: Maps]{style="color:black;"} {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "4"
ggplot() + # create the empty canvas
  geom_stars(data = Mxst) + # add raster layer
  geom_sf(data = Area, fill = NA, col = 'grey60') + # add polygon layer
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') +
  theme_void() +
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) +
  labs(fill = 'Altitude')
```

## [Review: Maps]{style="color:black;"} {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "5"
ggplot() + # create the empty canvas
  geom_stars(data = Mxst) + # add raster layer
  geom_sf(data = Area, fill = NA, col = 'grey60') + # add polygon layer
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') + # add point layer
  theme_void() +
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) +
  labs(fill = 'Altitude')
```

## [Review: Maps]{style="color:black;"} {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "6"
ggplot() + # create the empty canvas
  geom_stars(data = Mxst) + # add raster layer
  geom_sf(data = Area, fill = NA, col = 'grey60') + # add polygon layer
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') + # add point layer
  theme_void() + # theme for the figure
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) +
  labs(fill = 'Altitude')
```

## [Review: Maps]{style="color:black;"} {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "7"
ggplot() + # create the empty canvas
  geom_stars(data = Mxst) + # add raster layer
  geom_sf(data = Area, fill = NA, col = 'grey60') + # add polygon layer
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') + # add point layer
  theme_void() + # theme for the figure
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) + # color for the gradient
  labs(fill = 'Altitude')
```

## [Review: Maps]{style="color:black;"} {background-image="img/bg_2.png"}

<br/>

```{r eval = F}
#| code-line-numbers: "8"
ggplot() + # create the empty canvas
  geom_stars(data = Mxst) + # add raster layer
  geom_sf(data = Area, fill = NA, col = 'grey60') + # add polygon layer
  geom_sf(data = capturesSp, cex = 0.3, col = 'skyblue') + # add point layer
  theme_void() + # theme for the figure
  scale_fill_gradient(low = 'black', high = 'red', na.value = NA) + # color for the gradient
  labs(title = 'Map of the study area', fill = 'Altitude') # labels for the figure
```

![](img/4a_map.png){fig-align="center"}

# Network analysis{background-image="img/bg_title.png"}

## Why represent events in a network?{background-image="img/bg.png"}
<br/>

:::: columns
::: {.column}
[Identify individuals that are very active]{.black}
![](img/sna_01.png){fig-align="center"}
:::

::: {.column}
[Identify individuals that are intermediate]{.black}
![](img/sna_02.png){fig-align="center"}
:::

::::


## What is a graph?{background-image="img/bg.png"}
<br/>

![](img/sna_graphs.png){fig-align="center"}

## Elements of a network{background-image="img/bg.png"}
<br/>

[Nodes (vertices)]{.black}

![](img/sna_nodes.png){fig-align="center"}

[$$V = [1, 2, 3, ..., i]$$]{.black}


## Elements of a network{background-image="img/bg.png"}
<br/>

[Nodes (vertices)]{.black}

![](img/sna_nodesFaces.png){fig-align="center"}

[$$V = [1, 2, 3, ..., i]$$]{.black}

## Elements of a network{background-image="img/bg.png"}
<br/>

[Edges (links)]{.black}

![](img/sna_edges.png){fig-align="center"}

[$$E = [(1, 2), (1, 3), (2, 3), ..., (i,j)]$$]{.black}

## Elements of a network{background-image="img/bg.png"}
<br/>

[Network attributes]{.black}

![](img/sna_attributes.png){fig-align="center"}

[$$V = [0, 1, 1, ..., x_i]$$]{.black}

## Data structure{background-image="img/bg.png"}
<br/>

![](img/sna_data.png){fig-align="center"}

## General properties{background-image="img/bg.png"}
<br/>

![](img/sna_generalProperties.png){fig-align="center"}

## General properties{background-image="img/bg.png"}
<br/>
  
  - [Size]{.black}
  - [Diameter]{.black}
  - [Average path length]{.black}
  - [Density]{.black}
  - [Fragmentation]{.black}
  - [Clustering Coefficient]{.black}

## General properties{background-image="img/bg.png"}
<br/>

![](img/sna_generalAttr-1.png){fig-align="center"}

## General properties{background-image="img/bg.png"}
<br/>

![](img/sna_generalAttr-2.png){fig-align="center"}


## Local properties{background-image="img/bg.png"}
<br/>

![](img/sna_localProperties.png){fig-align="center"}

## Local properties{background-image="img/bg.png"}
<br/>

![](img/sna_centrality-1.png){fig-align="center"}

## Local properties{background-image="img/bg.png"}
<br/>

![](img/sna_centrality-2.png){fig-align="center"}

# SNA in R{background-image="img/bg_title.png"}

## SNA in R{background-image="img/bg.png"}
<br/>

```{r echo=F, warning=F, message=F}
# Libraries we will use:
library(dplyr) # for data manipulation
library(ggplot2) # For making figures
library(ggraph) # For visualization of the networks
library(igraph) # for network analysis
library(tidygraph) # tidyverse friendly network analysis

# Loading the data from the STNet package ------------
# Load the data for nodes
node <- STNet::SwinePrem %>% # load the data from the STNet library
  mutate(id = as.character(id)) # change the id to variable to character
# Load the data for edges
edge <- STNet::SwineMov %>% 
  mutate(id_orig = as.character(id_orig), id_dest = as.character(id_dest))
```

```{r create the network}
net <- as_tbl_graph(edge)

net
```

## tidygraph{background-image="img/bg.png"}
<br/>

::: incremental
  - [remember `%>%`?]{.black}  
  - [tidygrapgh introduces two new type of operators:]{.black}
    - [`%N>%` for nodes]{.black}
    - [`%E>%` for edges]{.black}
:::

## Visualization{background-image="img/bg.png"}
<br/>

```{r}
ggraph(net, layout = 'kk') + # this is our empty canvas
  geom_edge_link(aes(width = pigs.moved)) + # Add the edges
  geom_node_point() + # Add the nodes
  scale_edge_width(range = c(0.01, 0.9)) + # we set the range for the width of the edges
  labs(title = 'Title for the plot', edge_width = 'Number of pigs moved') # labels for the figure
```

# [It's Lab time!](https://cadms-ucd.github.io/PROCINORTE_TT/3a_NetworkIntro.html)
Network analysis in R


# Risk assessment{background-image="img/bg_title.png"}

## Risk analysis{background-image="img/bg.png"}
<br/>

![](img/ra_intro.png){fig-align="center"}

## Risk assessment{background-image="img/bg.png"}
<br/>

:::: columns
:::{.column width="50%"}
![](img/ra_methods.png)
:::

:::{.column width="50%"}
![](img/ra_guides.png)
:::
::::

## Triage{background-image="img/bg.png"}
<br/>

:::: columns
:::{.column width="50%"}
![](img/ra_triage.png)
:::

:::{.column width="50%"}
:::
::::

## Triage{background-image="img/bg.png"}
<br/>

:::: columns
:::{.column width="50%"}
![](img/ra_triage.png)
:::

:::{.column width="50%"}
[From this we could conclude:]{.black}
  
  - [No need for further action]{.black}
  - [More information needed]{.black}
  - [Need for a RA ]{.black}

:::
::::

## Hazard profiling{background-image="img/bg.png"}
<br/>

[A description of the health event and its context, current state of knowledge and potential risk management options]{.black}
  
  - [Classification of the causative agent]{.black}
  - [Persistence in the environment]{.black}
  - [Pathogenesis]{.black}
  - [Epidemiology]{.black}
  - [Diagnosis]{.black}
  - [Prevention and control]{.blac}
  - [Impact]{.black}

## Formulating your question{background-image="img/bg.png"}
<br/>












